local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer


local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
ScreenGui.Name = "FegWix"
ScreenGui.ResetOnSpawn = false

local MainFrame = Instance.new("Frame", ScreenGui)
MainFrame.Size = UDim2.new(0, 300, 0, 500)
MainFrame.Position = UDim2.new(0.05, 0, 0.25, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.BackgroundTransparency = 0.5
MainFrame.BorderSizePixel = 0
MainFrame.Active = true
MainFrame.Draggable = true

local Gradient = Instance.new("UIGradient", MainFrame)
Gradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(0, 200, 255)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(180, 0, 255))
}

local Title = Instance.new("TextLabel", MainFrame)
Title.Size = UDim2.new(1, 0, 0, 40)
Title.Text = "FegWix"
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.new(1, 1, 1)
Title.Font = Enum.Font.GothamBold
Title.TextScaled = true

local PlayerList = Instance.new("ScrollingFrame", MainFrame)
PlayerList.Size = UDim2.new(1, -10, 1, -80)
PlayerList.Position = UDim2.new(0, 5, 0, 45)
PlayerList.BackgroundTransparency = 1
PlayerList.BorderSizePixel = 0
PlayerList.ScrollBarThickness = 6
PlayerList.ScrollBarImageColor3 = Color3.fromRGB(150, 150, 150)
PlayerList.ClipsDescendants = true
PlayerList.ScrollingDirection = Enum.ScrollingDirection.Y
PlayerList.AutomaticCanvasSize = Enum.AutomaticSize.Y
PlayerList.CanvasSize = UDim2.new(0, 0, 0, 0)

local UIList = Instance.new("UIListLayout", PlayerList)
UIList.Padding = UDim.new(0, 4)
UIList.SortOrder = Enum.SortOrder.LayoutOrder

local AutoJumpBtn = Instance.new("TextButton", MainFrame)
AutoJumpBtn.Size = UDim2.new(1, -10, 0, 30)
AutoJumpBtn.Position = UDim2.new(0, 5, 1, -35)
AutoJumpBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
AutoJumpBtn.TextColor3 = Color3.new(1, 1, 1)
AutoJumpBtn.Text = "Auto Jump: OFF"
AutoJumpBtn.BorderSizePixel = 0
AutoJumpBtn.TextScaled = true
AutoJumpBtn.Font = Enum.Font.Gotham
Instance.new("UICorner", AutoJumpBtn).CornerRadius = UDim.new(0, 8)


local autoJumpEnabled = false
local autoJumpConnection = nil
local autoTPConnection = nil
local currentAutoTarget = nil
local guiVisible = true
local autoTPActive = false  -- Флаг для авто-телепорта

local playerButtons = {}

UserInputService.InputBegan:Connect(function(input)
	if input.KeyCode == Enum.KeyCode.LeftAlt then
		guiVisible = not guiVisible
		ScreenGui.Enabled = guiVisible
	end
end)


local jumpBindKey = Enum.KeyCode.q -- Вы можете заменить на любую другую клавишу, например, "F", "G" и т.д.

UserInputService.InputBegan:Connect(function(input, gameProcessedEvent)
	if gameProcessedEvent then return end  -- Игнорируем, если событие уже обработано системой игры

	if input.KeyCode == jumpBindKey then
		-- Переключаем состояние авто-прыжка
		autoJumpEnabled = not autoJumpEnabled
		AutoJumpBtn.Text = "Auto Jump: " .. (autoJumpEnabled and "ON" or "OFF")

		if autoJumpConnection then
			autoJumpConnection:Disconnect()
		end

		if autoJumpEnabled then
			autoJumpConnection = RunService.RenderStepped:Connect(function()
				if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then
					local hum = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
					if hum and hum:GetState() ~= Enum.HumanoidStateType.Jumping and hum:GetState() ~= Enum.HumanoidStateType.Freefall then
						hum:ChangeState(Enum.HumanoidStateType.Jumping)
					end
				end
			end)
		end
	end
end)


local function CreatePlayerEntry(plr)
	if playerButtons[plr] then return end

	local frame = Instance.new("Frame", PlayerList)
	frame.Size = UDim2.new(1, 0, 0, 32)
	frame.BackgroundTransparency = 1
	playerButtons[plr] = frame

	local nameBtn = Instance.new("TextButton", frame)
	nameBtn.Size = UDim2.new(0.55, -4, 1, 0)
	nameBtn.Position = UDim2.new(0, 0, 0, 0)
	nameBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	nameBtn.BorderSizePixel = 0
	nameBtn.TextColor3 = Color3.new(1, 1, 1)
	nameBtn.Text = plr.Name
	nameBtn.Font = Enum.Font.Gotham
	nameBtn.TextScaled = true
	Instance.new("UICorner", nameBtn).CornerRadius = UDim.new(0, 8)

	local autoTPBtn = Instance.new("TextButton", frame)
	autoTPBtn.Size = UDim2.new(0.4, 0, 1, 0)
	autoTPBtn.Position = UDim2.new(0.6, 0, 0, 0)
	autoTPBtn.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
	autoTPBtn.Text = "TP: OFF"
	autoTPBtn.TextColor3 = Color3.new(1, 1, 1)
	autoTPBtn.BorderSizePixel = 0
	autoTPBtn.TextScaled = true
	autoTPBtn.Font = Enum.Font.Gotham
	Instance.new("UICorner", autoTPBtn).CornerRadius = UDim.new(0, 8)

	nameBtn.MouseButton1Click:Connect(function()
		if LocalPlayer.Character and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
			LocalPlayer.Character:MoveTo(plr.Character.HumanoidRootPart.Position + Vector3.new(0, 3, 0))
		end
	end)

	autoTPBtn.MouseButton1Click:Connect(function()

		if autoTPActive then
			autoTPBtn.Text = "TP: OFF"
			autoTPActive = false
			if autoTPConnection then
				autoTPConnection:Disconnect()
				autoTPConnection = nil
			end
		else

			autoTPBtn.Text = "TP: ON"
			autoTPActive = true

			autoTPConnection = RunService.RenderStepped:Connect(function()
				if autoTPActive and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") and LocalPlayer.Character then
					LocalPlayer.Character:MoveTo(plr.Character.HumanoidRootPart.Position + Vector3.new(0, 3, 0))
				end
			end)
		end
	end)
end


local function RefreshPlayers()
	local currentPlayers = {}

	for _, p in ipairs(Players:GetPlayers()) do
		if p ~= LocalPlayer then
			currentPlayers[p] = true
			CreatePlayerEntry(p)
		end
	end


	for p, frame in pairs(playerButtons) do
		if not currentPlayers[p] then
			frame:Destroy()
			playerButtons[p] = nil
		end
	end
end


task.spawn(function()
	while true do
		RefreshPlayers()
		task.wait(0.5)
	end
end)
